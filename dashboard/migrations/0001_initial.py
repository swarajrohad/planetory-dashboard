# Generated by Django 5.2 on 2025-04-16 07:07

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AirQualityData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('location', models.CharField(max_length=100)),
                ('pm25', models.FloatField(help_text='PM2.5 concentration')),
                ('pm10', models.FloatField(help_text='PM10 concentration')),
                ('ozone', models.FloatField(help_text='Ozone concentration')),
                ('no2', models.FloatField(help_text='NO2 concentration')),
            ],
            options={
                'verbose_name_plural': 'Air Quality Data',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='BiodiversityData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('region', models.CharField(max_length=100)),
                ('species_count', models.IntegerField(help_text='Number of species')),
                ('endangered_count', models.IntegerField(help_text='Number of endangered species')),
                ('extinction_rate', models.FloatField(help_text='Extinction rate')),
            ],
            options={
                'verbose_name_plural': 'Biodiversity Data',
                'ordering': ['-year'],
            },
        ),
        migrations.CreateModel(
            name='ClimateData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('temperature_anomaly', models.FloatField(help_text='Temperature anomaly in Celsius')),
                ('co2_concentration', models.FloatField(help_text='CO2 concentration in PPM')),
                ('sea_level_rise', models.FloatField(help_text='Sea level rise in mm')),
            ],
            options={
                'verbose_name_plural': 'Climate Data',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='DeforestationData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('region', models.CharField(max_length=100)),
                ('forest_area', models.FloatField(help_text='Forest area in km²')),
                ('deforestation_rate', models.FloatField(help_text='Deforestation rate in km²/year')),
                ('reforestation_area', models.FloatField(help_text='Reforestation area in km²')),
            ],
            options={
                'verbose_name_plural': 'Deforestation Data',
                'ordering': ['-year'],
            },
        ),
        migrations.CreateModel(
            name='OceanHealthData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('location', models.CharField(max_length=100)),
                ('ocean_temperature', models.FloatField(help_text='Ocean temperature in Celsius')),
                ('acidity_ph', models.FloatField(help_text='Ocean acidity (pH)')),
                ('plastic_density', models.FloatField(help_text='Plastic density (particles/km²)')),
                ('coral_health_index', models.FloatField(help_text='Coral health index (0-100)')),
            ],
            options={
                'verbose_name_plural': 'Ocean Health Data',
                'ordering': ['-date'],
            },
        ),
    ]
